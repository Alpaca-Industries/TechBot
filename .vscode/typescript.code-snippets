{
	"A Command Template for Sapphire": {
		"prefix": "sapphireCommand",
		"body": [
		  "import { ApplyOptions } from '@sapphire/decorators';",
		  "import { ApplicationCommandRegistry, Args, Command, CommandOptions } from '@sapphire/framework';",
		  "",
		  "import { CommandInteraction, Message } from 'discord.js';",
		  "",
		  "@ApplyOptions<CommandOptions>({",
		  "	name: 'example',",
		  "	description: 'No Description',",
		  "	detailedDescription: ''",
		  "})",
		  "export class StatsCommand extends Command {",
		  "	messageRun(message: Message, args: Args) {",
		  "		return message.reply('Hi!')",
		  "	}",
		  "",
		  "	chatInputRun(interaction: CommandInteraction) {",
		  "		return interaction.reply('Hi!');",
		  "	}",
		  "",
		  "	registerApplicationCommands(registry: ApplicationCommandRegistry) {",
		  "		registry.registerChatInputCommand({",
		  "			name: this.name,",
		  "			description: this.description",
		  "		});",
		  "	}",
		  "}",
		  ""
		],
		"description": "A Command Template for Sapphire"
	  },
	  "A Listener Template for Sapphire": {
		"prefix": "sapphireListener",
		"body": [
		  "import { ApplyOptions } from '@sapphire/decorators';",
		  "import type { ListenerOptions, SapphireClient } from '@sapphire/framework';",
		  "import { Listener } from \"@sapphire/framework\";",
		  "",
		  "@ApplyOptions<ListenerOptions>({",
		  "    event: '${TM_FILENAME_BASE}'",
		  "})",
		  "export default class ${2:${TM_FILENAME_BASE/^(\\\\\\\\\\\\\\\\w+)/${1:/capitalize}/}Listener} extends Listener {",
		  "    run(...args: unknown[]): unknown {",
		  "        const { username, id } = client.user!;",
		  "        this.container.logger.info(`Successfully logged in as ${username} (${id})`);",
		  "        return;",
		  "    }",
		  "}"
		],
		"description": "A Listener Template for Sapphire"
	  }
}